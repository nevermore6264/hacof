import { NextResponse } from "next/server";

export async function POST(req: Request) {
    try {
        // 1. L·∫•y token t·ª´ header
        const authHeader = req.headers.get("authorization");
        if (!authHeader) {
            return NextResponse.json(
                { error: "Unauthorized" },
                { status: 401 }
            );
        }

        // 2. Proxy request ƒë·∫øn backend th·ª±c
        const backendResponse = await fetch(
            `${process.env.NEXT_PUBLIC_API_URL}/v1/conversations/single`, // üëà Endpoint backend
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: authHeader, // Gi·ªØ nguy√™n token
                },
                body: JSON.stringify(await req.json()), // Forward body
            }
        );

        // 3. Tr·∫£ v·ªÅ k·∫øt qu·∫£ t·ª´ backend
        const data = await backendResponse.json();
        return NextResponse.json(data, { status: backendResponse.status });

    } catch (error) {
        return NextResponse.json(
            { error: "Internal Server Error: " + error },
            { status: 500 }
        );
    }
}